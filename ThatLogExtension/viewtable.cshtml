@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>@Environment.GetEnvironmentVariable("WEBSITE_SITE_NAME") - Azure Web Site Log Browser - View Table</title>
        <link rel="stylesheet" href="Content/css/bootstrap.css" type="text/css" />
        <link rel="stylesheet" href="Content/css/jquery.dataTables.css" type="text/css" />
        <link href="Content/css/daterangepicker-bs3.css" rel="stylesheet" />
        <link href="Content/css/thatlog.css" rel="stylesheet" />
    </head>
    <body>
        <div class="container">
            
            <div class="navbar navbar-default navbar-fixed-top">
                <div class="container">
                    <a href="https://github.com/amitapl/ThatLogExtension"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png"></a>
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <a class="navbar-brand" href="~/"><img src="Content/images/logbrowser.gif" class="img" style="height: 100px;" /></a>
                    </div>
                    <ul class="nav navbar-nav">
                        <li><a href="~/"><h2>Azure Web Site Log Browser</h2></a></li>
                    </ul>
                </div>
            </div>

            <div class="row">
                <h4>
                    <span class="bold">View Logs From Azure Table Storage</span>
                    <div id="reportrange" class="pull-right" style="margin-bottom: 40px;cursor: pointer">
                        <i class="glyphicon glyphicon-calendar"></i>
                        <span></span><b class="caret"></b>
                    </div>
                </h4>
            </div>
            <table class="table table-striped" id="logBrowser" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Level</th>
                        <th></th>
                        <th></th>
                        <th>Instance</th>
                        <th>Activity</th>
                        <th>Message</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
            <img src="Content/ajax-loader.gif" id="loading-indicator" style="text-align: center" />
            <p class="bg-warning text-center" id="loadMoreBg"><button class="btn btn-warning" style="margin:20px" id="loadMore">Load More</button></p>
        </div>

        <script src="Content/js/jquery-1.10.1.min.js"></script>
        <script src="Content/js/bootstrap.js"></script>
        <script src="Content/js/jquery.dataTables.js"></script>
        <script src="Content/js/moment.min.js"></script>
        <script src="Content/js/daterangepicker.js"></script>
        <script src="Content/js/thatlogextension.js"></script>
        <script>
            var currentUrl;
            var currentData;
            var currentItems;

            function refresh(refreshUrl, isLoadMore) {
                if (isLoadMore) {
                    refreshUrl = currentUrl + '&token=' + currentData.Token;
                } else {
                    currentUrl = refreshUrl;
                }

                $("#loading-indicator").show();

                $.get(refreshUrl, function (data) {
                    currentData = data;
                    var items = data.Items;

                    items.forEach(function (item) {
                        item.date = '<div class="bold">' + moment(item.Timestamp).format('DD MMM YYYY HH:mm') + '</div>';

                        var levelLabel;
                        if (item.Level === 'Information') {
                            levelLabel = 'info';
                        } else if (item.Level === 'Warning') {
                            levelLabel = 'warning';
                        } else if (item.Level === 'Error') {
                            levelLabel = 'danger';
                        } else if (item.Level === 'Critical') {
                            levelLabel = 'danger';
                        } else {
                            levelLabel = 'default';
                        }

                        item.level = '<div class="label label-' + levelLabel + '">' + item.Level + '</div>';
                    });

                    if (isLoadMore) {
                        currentItems = currentItems.concat(items);
                    } else {
                        currentItems = items;
                    }

                    if (data.Token) {
                        $("#loadMoreBg").show();
                    } else {
                        $("#loadMoreBg").hide();
                    }

                    $('#logBrowser').dataTable({
                        "destroy": "true",
                        "data": currentItems,
                        "paging": true,
                        "searching": true,
                        "lengthMenu": [[20, 50, 100, -1], [20, 50, 100, "All"]],
                        "order": [[ 3, "asc" ], [ 2, "asc" ], [ 0,  "asc" ]],
                        "autoWidth": false,
                        "columns": [
                            {
                                "width": "150px",
                                "orderData": [3, 2],
                                "data": "date"
                            },
                            { "data": "level" },
                            {
                                "data": "RowKey",
                                "visible": false
                            },
                            {
                                "data": "EventTickCount",
                                "visible": false
                            },
                            { "data": "InstanceId" },
                            { "data": "ActivityId" },
                            { "data": "Message" }
                        ]
                    });

                    $("#loading-indicator").hide();
                }, "json");
            }

            function updateDateRange(start, end) {
                window.location.hash = '#' + start.format() + '&' + end.format();
                $('#reportrange span').html(start.format('MMMM D, YYYY LT') + ' - ' + end.format('MMMM D, YYYY LT'));
                refresh('api/logtable?from=' + encodeURIComponent(start.format()) + '&to=' + encodeURIComponent(end.format()));
            }

            $("#loadMore").click(function() {
                refresh(null, true);
            });

            $(document).ready(function () {
                $('#reportrange').daterangepicker(
                    {
                        ranges: {
                            'Past Hour': [moment().minute(0), moment().add('hours', 1).minute(0)],
                            'Last 6 Hours': [moment().minute(0).subtract('hours', 5), moment().add('hours', 1).minute(0)],
                            'Last 12 Hours': [moment().minute(0).subtract('hours', 11), moment().add('hours', 1).minute(0)],
                            'Today': [moment().minute(0).hour(0), moment().add('hours', 1).minute(0)],
                            'Yesterday': [moment().subtract('days', 2).minute(0).hour(0), moment().subtract('days', 1).minute(0).hour(0)],
                            'Last 7 Days': [moment().subtract('days', 6).minute(0).hour(0), moment().minute(0)],
                            'Last 30 Days': [moment().subtract('days', 29).minute(0).hour(0), moment().minute(0)]
                        },
                        timePicker: true,
                        timePickerIncrement: 60,
                        startDate: moment(),
                        endDate: moment()
                    },
                    updateDateRange
                );

                var hash = window.location.hash;
                if (hash) {
                    var times = hash.substring(1).split("&", 2);
                    if (times && times.length == 2) {
                        updateDateRange(moment(times[0]), moment(times[1]));
                        return;
                    }
                }

                updateDateRange(moment().minute(0).hour(0), moment().add('hours', 1).minute(0));
            });
        </script>
    </body>
</html>
